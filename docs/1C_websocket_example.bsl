// Пример интеграции 1C с WebSocket для мониторинга статусов устройств
// Версия: 1.0
// Дата: 2025-01-27

#Область ПеременныеМодуля

Переменная ВебСокет;
Переменная СостояниеПодключения;
Переменная АдресСервера;
Переменная ТипПодписки;
Переменная СчетчикПереподключений;
Переменная МаксимальноеКоличествоПереподключений;

#КонецОбласти

#Область ОбработчикиСобытийФормы

Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
    
    // Инициализация переменных
    СостояниеПодключения = "Отключено";
    АдресСервера = "ws://localhost:8000";
    ТипПодписки = "all"; // или конкретный device_id
    СчетчикПереподключений = 0;
    МаксимальноеКоличествоПереподключений = 5;
    
    // Настройка элементов формы
    ЭлементыФормы.АдресСервера.Значение = АдресСервера;
    ЭлементыФормы.ТипПодписки.Значение = ТипПодписки;
    ОбновитьСостояниеИнтерфейса();
    
КонецПроцедуры

Процедура ПриЗакрытии(ЗавершениеРаботы)
    
    // Закрытие WebSocket соединения при закрытии формы
    Если ВебСокет <> Неопределено Тогда
        Попытка
            ВебСокет.Закрыть();
        Исключение
            // Игнорируем ошибки при закрытии
        КонецПопытки;
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

Процедура ПодключитьсяКWebSocket(Команда)
    
    АдресСервера = ЭлементыФормы.АдресСервера.Значение;
    ТипПодписки = ЭлементыФормы.ТипПодписки.Значение;
    
    Если ПустаяСтрока(АдресСервера) Тогда
        ПоказатьПредупреждение(, "Укажите адрес сервера");
        Возврат;
    КонецЕсли;
    
    Если ПустаяСтрока(ТипПодписки) Тогда
        ПоказатьПредупреждение(, "Укажите тип подписки");
        Возврат;
    КонецЕсли;
    
    ПодключитьсяКСерверу();
    
КонецПроцедуры

Процедура ОтключитьсяОтWebSocket(Команда)
    
    ОтключитьсяОтСервера();
    
КонецПроцедуры

Процедура ОчиститьЖурнал(Команда)
    
    ЭлементыФормы.ЖурналСообщений.Очистить();
    
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Подключение к WebSocket серверу
Процедура ПодключитьсяКСерверу()
    
    Попытка
        
        // Создание нового WebSocket соединения
        ВебСокет = Новый ВебСокет;
        
        // Установка обработчиков событий
        ВебСокет.УстановитьОбработчикСобытия("ПриПолученииСообщения", ЭтотОбъект, "ОбработкаСообщенияВебСокет");
        ВебСокет.УстановитьОбработчикСобытия("ПриОткрытииСоединения", ЭтотОбъект, "ПриОткрытииСоединенияВебСокет");
        ВебСокет.УстановитьОбработчикСобытия("ПриЗакрытииСоединения", ЭтотОбъект, "ПриЗакрытииСоединенияВебСокет");
        ВебСокет.УстановитьОбработчикСобытия("ПриОшибке", ЭтотОбъект, "ПриОшибкеВебСокет");
        
        // Формирование полного адреса
        ПолныйАдрес = АдресСервера + "/ws/devices/" + ТипПодписки;
        
        // Подключение
        ВебСокет.Подключиться(ПолныйАдрес);
        
        СостояниеПодключения = "Подключается...";
        ОбновитьСостояниеИнтерфейса();
        
        ДобавитьВЖурнал("Инициировано подключение к: " + ПолныйАдрес, "Информация");
        
    Исключение
        
        СостояниеПодключения = "Ошибка подключения";
        ОбновитьСостояниеИнтерфейса();
        
        ТекстОшибки = "Ошибка при подключении к WebSocket: " + ОписаниеОшибки();
        ДобавитьВЖурнал(ТекстОшибки, "Ошибка");
        
        ЗаписьЖурналаРегистрации("WebSocket.ОшибкаПодключения", 
            УровеньЖурналаРегистрации.Ошибка,
            ,
            ,
            ТекстОшибки);
            
    КонецПопытки;
    
КонецПроцедуры

// Отключение от WebSocket сервера
Процедура ОтключитьсяОтСервера()
    
    Если ВебСокет <> Неопределено Тогда
        
        Попытка
            ВебСокет.Закрыть();
            ДобавитьВЖурнал("Инициировано отключение от сервера", "Информация");
        Исключение
            ДобавитьВЖурнал("Ошибка при отключении: " + ОписаниеОшибки(), "Ошибка");
        КонецПопытки;
        
    КонецЕсли;
    
    СостояниеПодключения = "Отключено";
    ОбновитьСостояниеИнтерфейса();
    
КонецПроцедуры

// Обновление состояния интерфейса
Процедура ОбновитьСостояниеИнтерфейса()
    
    ЭлементыФормы.СостояниеПодключения.Значение = СостояниеПодключения;
    
    Если СостояниеПодключения = "Подключено" Тогда
        ЭлементыФормы.ПодключитьсяКWebSocket.Доступность = Ложь;
        ЭлементыФормы.ОтключитьсяОтWebSocket.Доступность = Истина;
        ЭлементыФормы.АдресСервера.ТолькоПросмотр = Истина;
        ЭлементыФормы.ТипПодписки.ТолькоПросмотр = Истина;
    Иначе
        ЭлементыФормы.ПодключитьсяКWebSocket.Доступность = Истина;
        ЭлементыФормы.ОтключитьсяОтWebSocket.Доступность = Ложь;
        ЭлементыФормы.АдресСервера.ТолькоПросмотр = Ложь;
        ЭлементыФормы.ТипПодписки.ТолькоПросмотр = Ложь;
    КонецЕсли;
    
КонецПроцедуры

// Добавление записи в журнал сообщений
Процедура ДобавитьВЖурнал(Сообщение, ТипСообщения = "Информация")
    
    НоваяСтрока = ЭлементыФормы.ЖурналСообщений.Добавить();
    НоваяСтрока.Время = ТекущаяДата();
    НоваяСтрока.Тип = ТипСообщения;
    НоваяСтрока.Сообщение = Сообщение;
    
КонецПроцедуры

// Автоматическое переподключение
Процедура ПопытатьсяПереподключиться()
    
    Если СчетчикПереподключений < МаксимальноеКоличествоПереподключений Тогда
        
        СчетчикПереподключений = СчетчикПереподключений + 1;
        
        ДобавитьВЖурнал(СтрШаблон("Попытка переподключения %1 из %2", 
            СчетчикПереподключений, МаксимальноеКоличествоПереподключений), "Предупреждение");
        
        // Задержка перед переподключением (в секундах)
        ЗадержкаПереподключения = СчетчикПереподключений * 2;
        
        // Здесь можно использовать таймер для задержки
        // Для простоты примера делаем немедленное переподключение
        ПодключитьсяКСерверу();
        
    Иначе
        ДобавитьВЖурнал("Превышено максимальное количество попыток переподключения", "Ошибка");
    КонецЕсли;
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийWebSocket

// Обработчик открытия соединения
Процедура ПриОткрытииСоединенияВебСокет()
    
    СостояниеПодключения = "Подключено";
    СчетчикПереподключений = 0; // Сброс счетчика при успешном подключении
    ОбновитьСостояниеИнтерфейса();
    
    ДобавитьВЖурнал("WebSocket соединение установлено", "Успех");
    
    ЗаписьЖурналаРегистрации("WebSocket.Подключение", 
        УровеньЖурналаРегистрации.Информация,
        ,
        ,
        "Успешное подключение к WebSocket серверу");
        
КонецПроцедуры

// Обработчик закрытия соединения
Процедура ПриЗакрытииСоединенияВебСокет(КодЗакрытия, ПричинаЗакрытия)
    
    СостояниеПодключения = "Отключено";
    ОбновитьСостояниеИнтерфейса();
    
    ТекстСообщения = СтрШаблон("WebSocket соединение закрыто. Код: %1, Причина: %2", 
        КодЗакрытия, ПричинаЗакрытия);
    ДобавитьВЖурнал(ТекстСообщения, "Предупреждение");
    
    // Попытка автоматического переподключения при неожиданном разрыве
    Если КодЗакрытия <> 1000 Тогда // 1000 - нормальное закрытие
        ПопытатьсяПереподключиться();
    КонецЕсли;
    
КонецПроцедуры

// Обработчик ошибок WebSocket
Процедура ПриОшибкеВебСокет(ОписаниеОшибки)
    
    СостояниеПодключения = "Ошибка";
    ОбновитьСостояниеИнтерфейса();
    
    ТекстОшибки = "Ошибка WebSocket: " + ОписаниеОшибки;
    ДобавитьВЖурнал(ТекстОшибки, "Ошибка");
    
    ЗаписьЖурналаРегистрации("WebSocket.Ошибка", 
        УровеньЖурналаРегистрации.Ошибка,
        ,
        ,
        ТекстОшибки);
        
    // Попытка переподключения при ошибке
    ПопытатьсяПереподключиться();
    
КонецПроцедуры

// Основной обработчик получения сообщений
Процедура ОбработкаСообщенияВебСокет(Сообщение)
    
    Попытка
        
        // Парсинг JSON сообщения
        ЧтениеJSON = Новый ЧтениеJSON;
        ЧтениеJSON.УстановитьСтроку(Сообщение.Данные);
        ДанныеУстройства = ПрочитатьJSON(ЧтениеJSON);
        
        // Извлечение основных данных
        ИдентификаторУстройства = ДанныеУстройства.Получить("device_id");
        СтатусУстройства = ДанныеУстройства.Получить("status");
        РезультатТестирования = ДанныеУстройства.Получить("result");
        ВремяОбновления = ДанныеУстройства.Получить("updated_at");
        МакАдрес = ДанныеУстройства.Получить("mac_address");
        СерийныйНомер = ДанныеУстройства.Получить("serial_number");
        
        // Логирование полученного сообщения
        ТекстСообщения = СтрШаблон("Устройство: %1, Статус: %2, Результат: %3", 
            ИдентификаторУстройства, СтатусУстройства, РезультатТестирования);
        ДобавитьВЖурнал(ТекстСообщения, "Данные");
        
        // Обработка в зависимости от статуса
        Если СтатусУстройства = "success" Тогда
            ОбработатьУспешныйТест(ИдентификаторУстройства, РезультатТестирования, ДанныеУстройства);
            
        ИначеЕсли СтатусУстройства = "fail" Тогда
            ОбработатьНеудачныйТест(ИдентификаторУстройства, РезультатТестирования, ДанныеУстройства);
            
        ИначеЕсли СтатусУстройства = "error" Тогда
            ОбработатьОшибкуУстройства(ИдентификаторУстройства, РезультатТестирования, ДанныеУстройства);
            
        ИначеЕсли СтатусУстройства = "online" Тогда
            ОбработатьПодключениеУстройства(ИдентификаторУстройства, ДанныеУстройства);
            
        ИначеЕсли СтатусУстройства = "offline" Тогда
            ОбработатьОтключениеУстройства(ИдентификаторУстройства, ДанныеУстройства);
            
        Иначе
            ДобавитьВЖурнал(СтрШаблон("Неизвестный статус устройства: %1", СтатусУстройства), "Предупреждение");
        КонецЕсли;
        
        // Обновление данных в информационной базе (если необходимо)
        ОбновитьДанныеУстройстваВИБ(ДанныеУстройства);
        
    Исключение
        
        ТекстОшибки = "Ошибка при обработке WebSocket сообщения: " + ОписаниеОшибки();
        ДобавитьВЖурнал(ТекстОшибки, "Ошибка");
        
        ЗаписьЖурналаРегистрации("WebSocket.ОшибкаПарсинга", 
            УровеньЖурналаРегистрации.Ошибка,
            ,
            ,
            ТекстОшибки + Символы.ПС + "Исходное сообщение: " + Сообщение.Данные);
            
    КонецПопытки;
    
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСтатусовУстройств

// Обработка успешного завершения теста
Процедура ОбработатьУспешныйТест(ИдентификаторУстройства, РезультатТестирования, ДанныеУстройства)
    
    ДобавитьВЖурнал(СтрШаблон("✓ Тест устройства %1 завершен успешно: %2", 
        ИдентификаторУстройства, РезультатТестирования), "Успех");
    
    // Здесь можно добавить специфичную логику для успешных тестов
    // Например, обновление статуса в учетной системе
    
КонецПроцедуры

// Обработка неудачного завершения теста
Процедура ОбработатьНеудачныйТест(ИдентификаторУстройства, РезультатТестирования, ДанныеУстройства)
    
    ДобавитьВЖурнал(СтрШаблон("✗ Тест устройства %1 завершен с ошибкой: %2", 
        ИдентификаторУстройства, РезультатТестирования), "Ошибка");
    
    // Здесь можно добавить логику для обработки неудачных тестов
    // Например, создание задачи на повторное тестирование
    
КонецПроцедуры

// Обработка ошибки устройства
Процедура ОбработатьОшибкуУстройства(ИдентификаторУстройства, РезультатТестирования, ДанныеУстройства)
    
    ДобавитьВЖурнал(СтрШаблон("⚠ Ошибка устройства %1: %2", 
        ИдентификаторУстройства, РезультатТестирования), "Ошибка");
    
    // Здесь можно добавить логику для обработки ошибок устройств
    // Например, отправка уведомления техническому персоналу
    
КонецПроцедуры

// Обработка подключения устройства
Процедура ОбработатьПодключениеУстройства(ИдентификаторУстройства, ДанныеУстройства)
    
    ДобавитьВЖурнал(СтрШаблон("🔌 Устройство %1 подключено", ИдентификаторУстройства), "Информация");
    
    // Здесь можно добавить логику для обработки подключения устройств
    
КонецПроцедуры

// Обработка отключения устройства
Процедура ОбработатьОтключениеУстройства(ИдентификаторУстройства, ДанныеУстройства)
    
    ДобавитьВЖурнал(СтрШаблон("🔌 Устройство %1 отключено", ИдентификаторУстройства), "Предупреждение");
    
    // Здесь можно добавить логику для обработки отключения устройств
    
КонецПроцедуры

// Обновление данных устройства в информационной базе
Процедура ОбновитьДанныеУстройстваВИБ(ДанныеУстройства)
    
    // Пример обновления данных в ИБ
    // Здесь должна быть ваша логика работы с данными
    
    /*
    Попытка
        
        ИдентификаторУстройства = ДанныеУстройства.Получить("device_id");
        
        // Поиск или создание записи об устройстве
        УстройствоСсылка = НайтиИлиСоздатьУстройство(ИдентификаторУстройства);
        
        // Обновление данных
        УстройствоОбъект = УстройствоСсылка.ПолучитьОбъект();
        УстройствоОбъект.Статус = ДанныеУстройства.Получить("status");
        УстройствоОбъект.РезультатТестирования = ДанныеУстройства.Получить("result");
        УстройствоОбъект.ВремяПоследнегоОбновления = ТекущаяДата();
        УстройствоОбъект.Записать();
        
    Исключение
        ДобавитьВЖурнал("Ошибка при обновлении данных в ИБ: " + ОписаниеОшибки(), "Ошибка");
    КонецПопытки;
    */
    
КонецПроцедуры

#КонецОбласти